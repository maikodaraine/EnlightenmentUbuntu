group {
   name: "elm/panes/vertical/default";
   images {
      image: "button_up.png" COMP;
      image: "button_down.png" COMP;
      image: "button_disabled.png" COMP;
      image: "button_glow.png" COMP;
      image: "drag_glow.png" COMP;
      image: "button_disabled.png" COMP;
      image: "hpaned_handle.png" COMP;
      image: "icon_arrow_right.png" COMP;
      image: "icon_arrow_left.png" COMP;
   }
   parts
   {
      part
      {
         name: "whole";
         type: RECT;
         mouse_events: 0;
         description
         {
            state: "default" 0.0;
            visible: 0;
         }
      }

      //2 contents
      part
      {
         name: "whole_left";
         type: RECT;
         mouse_events: 0;
         description
         {
            state: "default" 0.0;
            rel2.to_x: "elm.bar";
            rel2.relative: 0.0 1.0;
            visible: 1;
         }
      }
      part
      {
         name: "elm.swallow.left";
         type: SWALLOW;
         clip_to: "whole_left";
         description
         {
            state: "default" 0.0;
            rel1.to: "whole_left";
            rel2.to: "whole_left";
         }
      }

      part
      {
         name: "whole_right";
         type: RECT;
         mouse_events: 0;
         description
         {
            state: "default" 0.0;
            rel1.to_x: "elm.bar";
            rel1.relative: 1.0 0.0;
            visible: 1;
         }
      }
      part
      {
         name: "elm.swallow.right";
         type: SWALLOW;
         clip_to: "whole_right";
         description
         {
            state: "default" 0.0;
            rel1.to: "whole_right";
            rel2.to: "whole_right";
         }
      }
      //BAR
      part { name: "elm.bar";
         mouse_events: 1;
         dragable {
            confine: "whole";
            x: 1 1 1;
            y: 0 0 0;
         }
         description { state: "default" 0.0;
            max: 15 9999;
            min: 15 100;
            rel1.relative: 0.0 0.5;
            rel2.relative: 1.0 0.5;
            image {
               normal: "button_up.png";
               border: 7 7 7 7;
            }
            image.middle: SOLID;
         }
         description { state: "down" 0.0;
            inherit: "default" 0.0;
            image.normal: "button_down.png";
            image.middle: SOLID;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      BUTTON_DISABLE_PART("elm.bar", 7 7 7 7);
      BUTTON_GLOW_PART("elm.bar", 220)
      FOCUS_GLOW(0.0, 0.0, 0, 0, "elm.bar", 1.0, 1.0, -1, -1, "elm.bar")
      DRAG_GLOW(0.0, 0.0, 0, 0, "elm.bar", 1.0, 1.0, -1, -1, "elm.bar")
      part { name: "bar_clip";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 255 255 255 175;
            rel1.to: "elm.bar";
            rel2.to: "elm.bar";
         }
      }
      part { name: "handle";
         mouse_events: 0;
         clip_to: "bar_clip";
         description { state: "default" 0.0;
            rel1.to: "elm.bar";
            rel2.to: "elm.bar";
            rel1.relative: 0.0 0.3;
            rel1.offset: 6 0;
            rel2.relative: 1.0 0.7;
            rel2.offset: -6 0;
            image.normal: "hpaned_handle.png";
         }
      }
      //Arrow
      part {
         name: "icon_arrow_right";
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 45 45;
            max: 45 45;
            color: 255 255 255 0;

            rel1.relative: 1.0 0.5;
            rel1.to_x: "elm.bar";
            rel1.offset: 45/2 -45/2;

            rel2.relative: 1.0 0.5;
            rel2.to_x: "elm.bar";
            rel2.offset: 45/2 45/2;

            image.normal: "icon_arrow_right.png";

            fixed: 1 1;
         }
         description { state: "default" 0.1;
            inherit: "default" 0.0;
            image.normal: "icon_arrow_left.png";
         }
         description { state: "anim_1" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 200;
            rel1.offset: (45/2 + 10) -45/2;
            rel2.offset: (45/2 +10) 45/2;
         }
         description { state: "anim_1" 0.1;
            inherit: "default" 0.0;
            image.normal: "icon_arrow_left.png";
            color: 255 255 255 200;
            rel1.offset: (45/2 + 10) -45/2;
            rel2.offset: (45/2 +10) 45/2;
         }
         description { state: "anim_2" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 0;
            rel1.offset: (45/2 + 20) -45/2;
            rel2.offset: (45/2 + 20) 45/2;
         }
         description { state: "anim_2" 0.1;
            inherit: "default" 0.0;
            image.normal: "icon_arrow_left.png";
            color: 255 255 255 0;
            rel1.offset: (45/2 + 20) -45/2;
            rel2.offset: (45/2 + 20) 45/2;
         }
      }
      part {
         name: "icon_arrow_left";
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 45 45;
            max: 45 45;
            color: 255 255 255 0;

            rel1.relative: 0.0 0.5;
            rel1.to_x: "elm.bar";
            rel1.offset: -45/2 -45/2;

            rel2.relative: 0.0 0.5;
            rel2.to_x: "elm.bar";
            rel2.offset: -45/2 45/2;

            image.normal: "icon_arrow_left.png";

            fixed: 1 1;
         }
         description { state: "default" 0.1;
            inherit: "default" 0.0;
            image.normal: "icon_arrow_right.png";
         }
         description { state: "anim_1" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 200;
            rel1.offset: (-45/2 - 10) -45/2;
            rel2.offset: (-45/2 - 10) 45/2;
         }
         description { state: "anim_1" 0.1;
            inherit: "default" 0.0;
            image.normal: "icon_arrow_right.png";
            color: 255 255 255 200;
            rel1.offset: (-45/2 - 10) -45/2;
            rel2.offset: (-45/2 - 10) 45/2;
         }
         description { state: "anim_2" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 0;
            rel1.offset: (-45/2 - 20) -45/2;
            rel2.offset: (-45/2 - 20) 45/2;
         }
         description { state: "anim_2" 0.1;
            inherit: "default" 0.0;
            image.normal: "icon_arrow_right.png";
            color: 255 255 255 0;
            rel1.offset: (-45/2 - 20) -45/2;
            rel2.offset: (-45/2 - 20) 45/2;
         }
      }

   }
   programs {
      program {
            name:   "button_click";
            signal: "mouse,down,1";
            source: "elm.bar";
            action: SIGNAL_EMIT "elm,action,press" "";
            BUTTON_GLOW_SUDDEN_STOP("elm.bar")
            after: "arrow_anim_start";
         }
         program {
            name:   "button_click2";
            signal: "mouse,clicked,1";
            source: "elm.bar";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program {
            name:   "button_unclick";
            signal: "mouse,up,1";
            source: "elm.bar";
            action: SIGNAL_EMIT "elm,action,unpress" "";
            after: "arrow_anim_stop";
         }
         program {
            name:   "button_click_anim";
            signal: "mouse,down,1";
            source: "elm.bar";
            action: STATE_SET "down" 0.0;
            target: "elm.bar";
            BUTTON_GLOW_SUDDEN_STOP("elm.bar")
         }
         program {
            name:   "button_unclick_anim";
            signal: "mouse,up,1";
            source: "elm.bar";
            action: STATE_SET "default" 0.0;
            target: "elm.bar";
         }
         program {
            name: "button_mouseover";
            signal: "mouse,in";
            source: "elm.bar";
            BUTTON_GLOW_ACTION("elm.bar")
         }
         program {
            name: "button_mouseout";
            signal: "mouse,out";
            source: "elm.bar";
            BUTTON_GLOW_STOP("elm.bar")
         }
         program {
            name: "button_focus";
            FOCUS_SIGNAL
            FOCUS_GLOW_ACTION("elm.bar")
         }
         program {
            name: "button_unfocus";
            UNFOCUS_SIGNAL
            UNFOCUS_GLOW_ACTION("elm.bar")
         }
         program {
            name: "button_drag";
            signal: "repeated";
            source: "elm";
            DRAG_ENTER_ACTION("elm.bar")
         }
         BUTTON_GLOW_PROGRAM("elm.bar")
         BUTTON_DISABLE_PROGRAM("elm.bar")
      program {
         name:   "button_down_double";
         signal: "mouse,down,1,double";
         source: "elm.bar";
         action: SIGNAL_EMIT "elm,action,click,double" "";
         BUTTON_GLOW_SUDDEN_STOP("elm.bar")
      }

      //arrows animation
      program {
         name: "arrow_anim_start";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"icon_arrow_left", st, 30, vl);
            if (vl == 0.0) {
               run_program(PROGRAM:"arrow_anim_start_ltr");
            }
            else {
               run_program(PROGRAM:"arrow_anim_start_rtl");
            }
         }
      }
      program {
         name: "arrow_anim_stop";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"icon_arrow_left", st, 30, vl);
            if (vl == 0.0) {
               run_program(PROGRAM:"arrow_anim_stop_ltr");
            }
            else {
               run_program(PROGRAM:"arrow_anim_stop_rtl");
            }
         }
      }

      program {
         name: "arrow_anim_start_ltr";
         action: STATE_SET "anim_1" 0.0;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         transition: LINEAR 0.6;
         after: "arrow_anim_1_ltr";
      }
      program {
         name: "arrow_anim_1_ltr";
         action: STATE_SET "anim_2" 0.0;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         transition: LINEAR 0.6;
         after: "arrow_anim_2_ltr";
      }
      program {
         name: "arrow_anim_2_ltr";
         action: STATE_SET "default" 0.0;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         after: "arrow_anim_start_ltr";
      }
      program {
         name: "arrow_anim_stop_ltr";
         action: ACTION_STOP;
         target: "arrow_anim_start_ltr";
         target: "arrow_anim_1_ltr";
         target: "arrow_anim_2_ltr";
         after: "arrow_anim_stop_1_ltr";
      }
      program {
         name: "arrow_anim_stop_1_ltr";
         action: STATE_SET "default" 0.0;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         transition: DECELERATE 0.4;
      }
      program {
         name: "arrow_anim_start_rtl";
         action: STATE_SET "anim_1" 0.1;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         transition: LINEAR 0.6;
         after: "arrow_anim_1_rtl";
      }
      program {
         name: "arrow_anim_1_rtl";
         action: STATE_SET "anim_2" 0.1;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         transition: LINEAR 0.6;
         after: "arrow_anim_2_rtl";
      }
      program {
         name: "arrow_anim_2_rtl";
         action: STATE_SET "default" 0.1;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         after: "arrow_anim_start_rtl";
      }
      program {
         name: "arrow_anim_stop_rtl";
         action: ACTION_STOP;
         target: "arrow_anim_start_rtl";
         target: "arrow_anim_1_rtl";
         target: "arrow_anim_2_rtl";
         after: "arrow_anim_stop_1_rtl";
      }
      program {
         name: "arrow_anim_stop_1_rtl";
         action: STATE_SET "default" 0.1;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         transition: DECELERATE 0.4;
      }
      program { name: "to_rtl";
         signal: "edje,state,rtl";
         source: "edje";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"icon_arrow_left", st, 30, vl);
            if (vl == 0.0) {
               set_state(PART:"icon_arrow_left", st, 0.1);
            }
            get_state(PART:"icon_arrow_right", st, 30, vl);
            if (vl == 0.0) {
               set_state(PART:"icon_arrow_right", st, 0.1);
            }
         }
      }
      program { name: "to_ltr";
         signal: "edje,state,ltr";
         source: "edje";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"icon_arrow_left", st, 30, vl);
            if (vl == 0.1) {
               set_state(PART:"icon_arrow_left", st, 0.0);
            }
            get_state(PART:"icon_arrow_right", st, 30, vl);
            if (vl == 0.1) {
               set_state(PART:"icon_arrow_right", st, 0.0);
            }
         }
      }
   }
}

group {
   name: "elm/panes/horizontal/default";
   images {
      image: "button_up.png" COMP;
      image: "button_down.png" COMP;
      image: "button_disabled.png" COMP;
      image: "button_glow.png" COMP;
      image: "drag_glow.png" COMP;
      image: "button_disabled.png" COMP;
      image: "vpaned_handle.png" COMP;
      image: "icon_arrow_up.png" COMP;
      image: "icon_arrow_down.png" COMP;
   }
   parts
   {
      part
      {
         name: "whole";
         type: RECT;
         mouse_events: 0;
         description
         {
            state: "default" 0.0;
            visible: 0;
         }
      }

      //2 contents
      part
      {
         name: "whole_left";
         type: RECT;
         mouse_events: 0;
         description
         {
            state: "default" 0.0;
            rel2.to_y: "elm.bar";
            rel2.relative: 1.0 0.0;
            visible: 1;
         }
      }
      part
      {
         name: "elm.swallow.left";
         type: SWALLOW;
         clip_to: "whole_left";
         description
         {
            state: "default" 0.0;
            rel1.to: "whole_left";
            rel2.to: "whole_left";
         }
      }
      part
      {
         name: "whole_right";
         type: RECT;
         mouse_events: 0;
         description
         {
            state: "default" 0.0;
            rel1.to_y: "elm.bar";
            rel1.relative: 0.0 1.0;
            visible: 1;
         }
      }
      part
      {
         name: "elm.swallow.right";
         type: SWALLOW;
         clip_to: "whole_right";
         description
         {
            state: "default" 0.0;
            rel1.to: "whole_right";
            rel2.to: "whole_right";
         }
      }
      //BAR
      part { name: "elm.bar";
         mouse_events: 1;
         dragable {
            confine: "whole";
            x: 0 0 0;
            y: 1 1 1;
         }
         description { state: "default" 0.0;
            max: 999 15;
            min: 100 15;
            fixed: 1 1;
            rel1.relative: 0.5 0.0;
            rel2.relative: 0.5 1.0;
            image {
               normal: "button_up.png";
               border: 7 7 7 7;
            }
            image.middle: SOLID;
         }
         description { state: "down" 0.0;
            inherit: "default" 0.0;
            image.normal: "button_down.png";
            image.middle: SOLID;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      BUTTON_DISABLE_PART("elm.bar", 7 7 7 7);
      BUTTON_GLOW_PART("elm.bar", 220)
      FOCUS_GLOW(0.0, 0.0, 0, 0, "elm.bar", 1.0, 1.0, -1, -1, "elm.bar")
      DRAG_GLOW(0.0, 0.0, 0, 0, "elm.bar", 1.0, 1.0, -1, -1, "elm.bar")
      part { name: "bar_clip";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 255 255 255 175;
            rel1.to: "elm.bar";
            rel2.to: "elm.bar";
         }
      }
      part { name: "handle";
         mouse_events: 0;
         clip_to: "bar_clip";
         description { state: "default" 0.0;
            rel1.to: "elm.bar";
            rel2.to: "elm.bar";
            rel1.relative: 0.25 0;
            rel1.offset: 0 4;
            rel2.relative: 0.75 1.0;
            rel2.offset: 0 -4;
            image.normal: "vpaned_handle.png";
         }
      }
      //Arrow
      part {
         name: "icon_arrow_right";
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 45 45;
            max: 45 45;
            color: 255 255 255 0;

            rel1.relative: 0.5 1.0;
            rel1.to_y: "elm.bar";
            rel1.offset: -45/2 45/2;

            rel2.relative: 0.5 1.0;
            rel2.to_y: "elm.bar";
            rel2.offset: 45/2 45/2;

            image.normal: "icon_arrow_down.png";

            fixed: 1 1;
         }
         description { state: "anim_1" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 200;
            rel1.offset: -45/2 (45/2 +10);
            rel2.offset: 45/2 (45/2 +10);
         }
         description { state: "anim_2" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 0;
            rel1.offset: -45/2 (45/2 + 20);
            rel2.offset: 45/2 (45/2 + 20);
         }
      }
      part {
         name: "icon_arrow_left";
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 45 45;
            max: 45 45;
            color: 255 255 255 0;

            rel1.relative: 0.5 0.0;
            rel1.to_y: "elm.bar";
            rel1.offset: -45/2 -45/2;

            rel2.relative: 0.5 0.0;
            rel2.to_y: "elm.bar";
            rel2.offset: 45/2 -45/2;

            image.normal: "icon_arrow_up.png";

            fixed: 1 1;
         }
         description { state: "anim_1" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 200;
            rel1.offset: -45/2 (-45/2 - 10);
            rel2.offset: 45/2 (-45/2 - 10);
         }
         description { state: "anim_2" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 0;
            rel1.offset: -45/2 (-45/2 - 20);
            rel2.offset: 45/2 (-45/2 - 20);
         }
      }
   }
   programs {
      program {
            name:   "button_click";
            signal: "mouse,down,1";
            source: "elm.bar";
            action: SIGNAL_EMIT "elm,action,press" "";
            BUTTON_GLOW_SUDDEN_STOP("elm.bar")
            after: "arrow_anim_start";
         }
         program {
            name:   "button_click2";
            signal: "mouse,clicked,1";
            source: "elm.bar";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program {
            name:   "button_unclick";
            signal: "mouse,up,1";
            source: "elm.bar";
            action: SIGNAL_EMIT "elm,action,unpress" "";
            after: "arrow_anim_stop";
         }
         program {
            name:   "button_click_anim";
            signal: "mouse,down,1";
            source: "elm.bar";
            action: STATE_SET "down" 0.0;
            target: "elm.bar";
            BUTTON_GLOW_SUDDEN_STOP("elm.bar")
         }
         program {
            name:   "button_unclick_anim";
            signal: "mouse,up,1";
            source: "elm.bar";
            action: STATE_SET "default" 0.0;
            target: "elm.bar";
         }
         program {
            name: "button_mouseover";
            signal: "mouse,in";
            source: "elm.bar";
            BUTTON_GLOW_ACTION("elm.bar")
         }
         program {
            name: "button_mouseout";
            signal: "mouse,out";
            source: "elm.bar";
            BUTTON_GLOW_STOP("elm.bar")
         }
         program {
            name: "button_focus";
            FOCUS_SIGNAL
            FOCUS_GLOW_ACTION("elm.bar")
         }
         program {
            name: "button_unfocus";
            UNFOCUS_SIGNAL
            UNFOCUS_GLOW_ACTION("elm.bar")
         }
         program {
            name: "button_drag";
            signal: "repeated";
            source: "elm";
            DRAG_ENTER_ACTION("elm.bar")
         }
         BUTTON_GLOW_PROGRAM("elm.bar")
         BUTTON_DISABLE_PROGRAM("elm.bar")
      program {
         name:   "button_down_double";
         signal: "mouse,down,1,double";
         source: "elm.bar";
         action: SIGNAL_EMIT "elm,action,click,double" "";
         BUTTON_GLOW_SUDDEN_STOP("elm.bar")
      }

      //arrows animation
      program {
         name: "arrow_anim_start";
         action: STATE_SET "anim_1" 0.0;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         transition: LINEAR 0.6;
         after: "arrow_anim_1";
      }
      program {
         name: "arrow_anim_1";
         action: STATE_SET "anim_2" 0.0;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         transition: LINEAR 0.6;
         after: "arrow_anim_2";
      }
      program {
         name: "arrow_anim_2";
         action: STATE_SET "default" 0.0;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         after: "arrow_anim_start";
      }
      program {
         name: "arrow_anim_stop";
         action: ACTION_STOP;
         target: "arrow_anim_start";
         target: "arrow_anim_1";
         target: "arrow_anim_2";
         after: "arrow_anim_stop_1";
      }
      program {
         name: "arrow_anim_stop_1";
         action: STATE_SET "default" 0.0;
         target: "icon_arrow_right";
         target: "icon_arrow_left";
         transition: DECELERATE 0.4;
      }
   }
}
