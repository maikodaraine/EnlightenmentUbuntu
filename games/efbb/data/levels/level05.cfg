# use '#' for comments
# use '/' to separate elements of lists
# use ',' to separate properties of elements
# use ' ' after '(' and before ')'

[Consts]
WIDTH = 1280
HEIGHT = 720
FLOOR_Y = 610

BOX_SIZE_S = 20
BOX_SIZE_R = 40
BOX_SIZE_L = 120
TARGET_SIZE = 60
PRISON_X = 1300

STONE = stone
WOOD = wood

PIRATE = pirate
BOSS = boss

PRISONBAR80 = prisonbar_80
PRISONBAR100 = prisonbar_100
PRISONBAR120 = prisonbar_120

[General]
level_num = 6
level_id = pirate_prison
cannon_pos_x = 130
cannon_pos_y = FLOOR_Y - ( 68 + BOX_SIZE_R )
ammo = 2
bg = 1
time_attack = 0

[Elements]
blocks = STONE, BOX_SIZE_R, BOX_SIZE_L, 0, FLOOR_Y - BOX_SIZE_L, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, 0,
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_R ), 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, BOX_SIZE_R, FLOOR_Y - BOX_SIZE_R, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, BOX_SIZE_R, FLOOR_Y - BOX_SIZE_R * 2, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, BOX_SIZE_R, FLOOR_Y - BOX_SIZE_R * 3, 0, -1 /

 STONE, BOX_SIZE_L, BOX_SIZE_R, BOX_SIZE_R * 2, FLOOR_Y - BOX_SIZE_R, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R * 2 + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_R, 0, -1 /
 STONE, BOX_SIZE_L, BOX_SIZE_R, ( BOX_SIZE_R * 3 + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_R, 0, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 ),
    FLOOR_Y - BOX_SIZE_R * 2, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 ),
    FLOOR_Y - BOX_SIZE_R, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 ),
    FLOOR_Y - BOX_SIZE_R * 2, 0, -1 /

#PRISON
 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X - ( BOX_SIZE_S * 5 + BOX_SIZE_R ),
    FLOOR_Y - BOX_SIZE_S, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X - ( BOX_SIZE_S * 5 + BOX_SIZE_R ),
    FLOOR_Y - BOX_SIZE_S * 2, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X - ( BOX_SIZE_S * 5 + BOX_SIZE_R ),
    FLOOR_Y - BOX_SIZE_S * 3, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X - ( BOX_SIZE_S * 5 + BOX_SIZE_R ),
    FLOOR_Y - BOX_SIZE_S * 4, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X - ( BOX_SIZE_S * 5 + BOX_SIZE_R ),
    FLOOR_Y - ( BOX_SIZE_S * 4 + BOX_SIZE_R ), 30, -1 /

 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X - BOX_SIZE_S * 5,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X - BOX_SIZE_S * 4,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X - BOX_SIZE_S * 3,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X - BOX_SIZE_S * 2,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X - BOX_SIZE_S,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + BOX_SIZE_S,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_L, BOX_SIZE_R, PRISON_X + BOX_SIZE_S,
    FLOOR_Y - BOX_SIZE_R * 2, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 2 ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 3 ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_L, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 3 ),
    FLOOR_Y - ( BOX_SIZE_R + BOX_SIZE_L ), 30, -1 /

 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R *4 ),
    FLOOR_Y - BOX_SIZE_S, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 4 ),
    FLOOR_Y - BOX_SIZE_S * 2, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 4 ),
    FLOOR_Y - BOX_SIZE_S * 3, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 4 ),
    FLOOR_Y - BOX_SIZE_S * 4, 30, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_L, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 5 ),
    FLOOR_Y - BOX_SIZE_L, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 5 ),
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_R ), 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 6 ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 6 ),
    FLOOR_Y - BOX_SIZE_R * 2, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 7 ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 7 ),
    FLOOR_Y - BOX_SIZE_R * 2, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 8 ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 9 ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 9 ),
    FLOOR_Y - BOX_SIZE_R * 2, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 10 ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /

 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 11 ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S * 2 + BOX_SIZE_R * 11 ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S * 3 + BOX_SIZE_R * 11 ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S * 4 + BOX_SIZE_R * 11 ),
    FLOOR_Y - BOX_SIZE_R, 30, -1 /

 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S * 5 + BOX_SIZE_R * 11 ),
    FLOOR_Y - BOX_SIZE_S, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S * 5 + BOX_SIZE_R * 11 ),
    FLOOR_Y - BOX_SIZE_S * 2, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S * 5 + BOX_SIZE_R * 11 ),
    FLOOR_Y - BOX_SIZE_S * 3, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S * 5 + BOX_SIZE_R * 11 ),
    FLOOR_Y - BOX_SIZE_S * 4, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S * 5 + BOX_SIZE_R * 11 ),
    FLOOR_Y - ( BOX_SIZE_S * 4 + BOX_SIZE_R ), 30, -1 /

 WOOD, BOX_SIZE_S, BOX_SIZE_L, PRISON_X,
    FLOOR_Y - ( BOX_SIZE_R + BOX_SIZE_L ), 30, 0 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 2 ),
    FLOOR_Y - BOX_SIZE_R * 3, 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 2 ),
    FLOOR_Y - BOX_SIZE_R * 4, 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 8 ),
    FLOOR_Y - ( BOX_SIZE_R + BOX_SIZE_L ), 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, PRISON_X + ( BOX_SIZE_S * 2 + BOX_SIZE_R * 8 ),
    FLOOR_Y - ( BOX_SIZE_R + BOX_SIZE_L ), 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, PRISON_X + ( BOX_SIZE_S * 2 + BOX_SIZE_R * 10 ),
    FLOOR_Y - ( BOX_SIZE_R + BOX_SIZE_L ), 30, -1 /

 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X,
    FLOOR_Y - ( BOX_SIZE_R + BOX_SIZE_L + BOX_SIZE_S ), 25, 1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + BOX_SIZE_L,
    FLOOR_Y - ( BOX_SIZE_R + BOX_SIZE_L + BOX_SIZE_S ), 25, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + BOX_SIZE_L * 2,
    FLOOR_Y - ( BOX_SIZE_R + BOX_SIZE_L + BOX_SIZE_S ), 25, 2 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + BOX_SIZE_L * 3,
    FLOOR_Y - ( BOX_SIZE_R + BOX_SIZE_L + BOX_SIZE_S ), 25, -1 /

 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + BOX_SIZE_S,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S ), 25, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + BOX_SIZE_R * 2,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S ), 25, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 3 ),
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S ), 25, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + BOX_SIZE_R * 5,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S ), 25, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 6 ),
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S ), 25, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + BOX_SIZE_R * 8,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S ), 25, 3 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 9 ),
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S ), 25, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + BOX_SIZE_R * 11,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S ), 25, -1 /

 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + BOX_SIZE_L,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + BOX_SIZE_L * 2,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + BOX_SIZE_L * 3,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L + BOX_SIZE_S * 2 ), 20, -1 /

 WOOD, BOX_SIZE_S, BOX_SIZE_L, PRISON_X + BOX_SIZE_S,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, PRISON_X + BOX_SIZE_R * 2,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 3 ), 20, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + BOX_SIZE_S,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + BOX_SIZE_R * 2,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 20, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + BOX_SIZE_S * 2,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 20, -1 /

 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + BOX_SIZE_R * 5,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 6 ),
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R *4 ),
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L + BOX_SIZE_S * 3 ), 20, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 5 ),
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L + BOX_SIZE_S * 2 ), 20, -1 /

 WOOD, BOX_SIZE_S, BOX_SIZE_L, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 9 ),
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, PRISON_X + BOX_SIZE_R * 11,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + BOX_SIZE_L * 3,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 3 ), 20, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + BOX_SIZE_L * 3,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 9 ),
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + BOX_SIZE_R * 11,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 20, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, PRISON_X + BOX_SIZE_R * 10,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 20, -1 /

 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 2 ),
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 5 ), 20, 5 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 6 ),
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 5 ), 20, 6 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, PRISON_X + BOX_SIZE_R * 4,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + BOX_SIZE_R * 4,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 7 ),
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R * 7 ),
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, PRISON_X + ( BOX_SIZE_S + BOX_SIZE_R *4 ),
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 20, 4

objects = PRISONBAR80, 8, 80, PRISON_X - 5 + BOX_SIZE_S * 2,
    FLOOR_Y - ( 79 + BOX_SIZE_R * 2), 1 /
 PRISONBAR80, 8, 80, PRISON_X - 10 + BOX_SIZE_S * 4,
    FLOOR_Y - ( 79 + BOX_SIZE_R * 2), 1 /
 PRISONBAR80, 8, 80, PRISON_X + 5 + ( BOX_SIZE_S * 2 + BOX_SIZE_R * 6 ),
    FLOOR_Y - ( 79 + BOX_SIZE_R * 2), 1 /
 PRISONBAR80, 8, 80, PRISON_X - 5 + ( BOX_SIZE_S * 4 + BOX_SIZE_R * 6 ),
    FLOOR_Y - ( 79 + BOX_SIZE_R * 2), 1 /

 PRISONBAR120, 8, 120, PRISON_X - 4 + ( BOX_SIZE_S * 4 + BOX_SIZE_R * 4 ),
    FLOOR_Y - ( 119 + BOX_SIZE_R * 6 + BOX_SIZE_S * 3 ), 1 /
 PRISONBAR100, 8, 100, PRISON_X + 5 + ( BOX_SIZE_S * 4 + BOX_SIZE_R * 3 ),
    FLOOR_Y - ( 99 + BOX_SIZE_R * 6 + BOX_SIZE_S * 3 ), 1 /
 PRISONBAR100, 8, 100, PRISON_X - 13 + ( BOX_SIZE_S * 4 + BOX_SIZE_R * 5 ),
    FLOOR_Y - ( 99 + BOX_SIZE_R * 6 + BOX_SIZE_S * 3 ), 1

targets = PIRATE, TARGET_SIZE, TARGET_SIZE, PRISON_X + 10 + BOX_SIZE_S,
    FLOOR_Y - ( TARGET_SIZE + BOX_SIZE_S * 4 ) /
 BOSS, 110, 88, PRISON_X + 25 + ( BOX_SIZE_L + BOX_SIZE_R  ),
    FLOOR_Y - ( 88 + BOX_SIZE_R * 3 + BOX_SIZE_L + BOX_SIZE_S * 3 )
