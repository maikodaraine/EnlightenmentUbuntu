# use '#' for comments
# use '/' to separate elements of lists
# use ',' to separate properties of elements
# use ' ' after '(' and before ')'

[Consts]
WIDTH = 1280
HEIGHT = 720
FLOOR_Y = 650

BOX_SIZE_S = 20
BOX_SIZE_R = 40
BOX_SIZE_L = 120
TARGET_SIZE = 60
SHIP_X = 500

STONE = stone
WOOD = wood

PIRATE = pirate
BOSS = boss

FLAG = flag
SAILFRONT = sailfront
SAILBACK = sailback

[General]
level_num = 5
level_id = pirate_ship
cannon_pos_x = 40
cannon_pos_y = FLOOR_Y - ( 68 + BOX_SIZE_L + BOX_SIZE_R )
ammo = 3
bg = 3
time_attack = 1

[Elements]
blocks = STONE, BOX_SIZE_R, BOX_SIZE_R, 0, FLOOR_Y - BOX_SIZE_R, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_L, 0,
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_R ), 0, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, BOX_SIZE_R, FLOOR_Y - BOX_SIZE_R, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_L, BOX_SIZE_R,
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_R ), 0, -1 /

 STONE, BOX_SIZE_L, BOX_SIZE_R, BOX_SIZE_R * 2, FLOOR_Y - BOX_SIZE_R, 0, -1 /
 STONE, BOX_SIZE_L, BOX_SIZE_R, BOX_SIZE_R * 2,
    FLOOR_Y - BOX_SIZE_R * 2, 0, -1 /
 STONE, BOX_SIZE_L, BOX_SIZE_R, BOX_SIZE_R * 2,
    FLOOR_Y - BOX_SIZE_R * 3, 0, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, BOX_SIZE_R * 2,
    FLOOR_Y - BOX_SIZE_R * 4, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, BOX_SIZE_R * 3,
    FLOOR_Y - BOX_SIZE_R * 4, 0, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R * 2 + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_R, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R * 3 + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_R, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R * 4 + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_R, 0, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R * 2 + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_R * 2, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R * 3 + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_R * 2, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R * 4 + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_R * 2, 0, -1 /

 STONE, BOX_SIZE_L, BOX_SIZE_R, ( BOX_SIZE_R * 2 + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_R * 3, 0, -1 /
 STONE, BOX_SIZE_L, BOX_SIZE_R, ( BOX_SIZE_R + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_R * 4, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R + BOX_SIZE_L * 2 ),
    FLOOR_Y - BOX_SIZE_R * 4, 0, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, ( BOX_SIZE_R * 5 + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_R, 0, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_L, ( BOX_SIZE_R * 5 + BOX_SIZE_L ),
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_R ), 0, -1 /

#SHIP
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X, FLOOR_Y - BOX_SIZE_S, 50, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X + BOX_SIZE_L,
    FLOOR_Y - BOX_SIZE_S, 50, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X + BOX_SIZE_L * 2,
    FLOOR_Y - BOX_SIZE_S, 50, -1 /

 WOOD, BOX_SIZE_R, BOX_SIZE_S, SHIP_X - 15, FLOOR_Y - BOX_SIZE_S * 2, 45, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 15 + BOX_SIZE_R,
    FLOOR_Y - BOX_SIZE_S * 2, 45, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 15 + ( BOX_SIZE_R + BOX_SIZE_L ),
    FLOOR_Y - BOX_SIZE_S * 2, 45, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 15 + ( BOX_SIZE_R + BOX_SIZE_L * 2 ),
    FLOOR_Y - BOX_SIZE_S * 2, 45, -1 /

#left blocks
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 30, FLOOR_Y - BOX_SIZE_S * 3, 50, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 40, FLOOR_Y - BOX_SIZE_S * 4, 40, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 40, FLOOR_Y - BOX_SIZE_S * 5, 30, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 40, FLOOR_Y - BOX_SIZE_S * 6, 20, -1 /

#right blocks
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 50 + BOX_SIZE_L * 3,
    FLOOR_Y - BOX_SIZE_S * 3, 45, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 40 + BOX_SIZE_L * 3,
    FLOOR_Y - BOX_SIZE_S * 4, 45, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 35 + BOX_SIZE_L * 3,
    FLOOR_Y - BOX_SIZE_S * 5, 40, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 25 + BOX_SIZE_L * 3,
    FLOOR_Y - BOX_SIZE_S * 6, 40, -1 /

# center
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X + BOX_SIZE_L,
    FLOOR_Y - BOX_SIZE_S * 3, 45, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, SHIP_X + 30 + BOX_SIZE_L * 2,
    FLOOR_Y - BOX_SIZE_S * 3, 45, -1 /

 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 40 + BOX_SIZE_L,
    FLOOR_Y - BOX_SIZE_S * 4, 45, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 40 + BOX_SIZE_L * 2,
    FLOOR_Y - BOX_SIZE_S * 4, 45, -1 /

# center up
 WOOD, BOX_SIZE_S, BOX_SIZE_R, SHIP_X + ( BOX_SIZE_L - BOX_SIZE_S ),
    FLOOR_Y - ( BOX_SIZE_S * 4 + BOX_SIZE_R ), 40, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, SHIP_X - 15 + ( BOX_SIZE_L + BOX_SIZE_R ),
    FLOOR_Y - ( BOX_SIZE_S * 4 + BOX_SIZE_R ), 40, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, SHIP_X + BOX_SIZE_L * 2,
    FLOOR_Y - ( BOX_SIZE_S * 4 + BOX_SIZE_R ), 40, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, SHIP_X + ( BOX_SIZE_L * 2 + BOX_SIZE_R ),
    FLOOR_Y - ( BOX_SIZE_S * 4 + BOX_SIZE_R ), 40, -1 /

#left mid blocks
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X + 6 + BOX_SIZE_R,
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R ), 80, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, SHIP_X + 8 + BOX_SIZE_S,
    FLOOR_Y - ( BOX_SIZE_S * 4 + BOX_SIZE_R * 2 ), 5, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, SHIP_X + 8,
    FLOOR_Y - ( BOX_SIZE_S * 4 + BOX_SIZE_R * 2 ), 3, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, SHIP_X + 7,
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R * 2 ), 2, -1 /

 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X + BOX_SIZE_L * 2,
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R ), 40, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X + BOX_SIZE_L * 3,
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R ), 40, -1 /

 WOOD, BOX_SIZE_S, BOX_SIZE_L, SHIP_X - 15 + ( BOX_SIZE_L + BOX_SIZE_R ),
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R + BOX_SIZE_L ), 60, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, SHIP_X - 15 + ( BOX_SIZE_L + BOX_SIZE_R ),
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R + BOX_SIZE_L * 2 ), 50, 2 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, SHIP_X - 25 + BOX_SIZE_L,
    FLOOR_Y - ( BOX_SIZE_S * 6 + BOX_SIZE_R + BOX_SIZE_L * 2 ), 40, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, SHIP_X - 15 + ( BOX_SIZE_L + BOX_SIZE_R ),
    FLOOR_Y - ( BOX_SIZE_S * 6 + BOX_SIZE_R + BOX_SIZE_L * 3 ), 20, 0 /

 WOOD, BOX_SIZE_S, BOX_SIZE_L,
    SHIP_X - BOX_SIZE_S + ( BOX_SIZE_L * 2 + BOX_SIZE_R ),
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R + BOX_SIZE_L ), 50, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, SHIP_X + ( BOX_SIZE_L * 2 + BOX_SIZE_R ),
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R + BOX_SIZE_L ), 50, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, SHIP_X - 10 + ( BOX_SIZE_L * 2 + BOX_SIZE_R ),
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R + BOX_SIZE_L * 2 ), 40, 1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, SHIP_X - 10 + ( BOX_SIZE_L * 2 + BOX_SIZE_R ),
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R * 2 + BOX_SIZE_L * 2 ), 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_R, SHIP_X - 10 + ( BOX_SIZE_L * 2 + BOX_SIZE_R ),
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R * 3 + BOX_SIZE_L * 2 ), 20, -1 /

 WOOD, BOX_SIZE_S, BOX_SIZE_R, SHIP_X + ( BOX_SIZE_R * 3 + BOX_SIZE_L * 2 ),
    FLOOR_Y - ( BOX_SIZE_S * 5 + BOX_SIZE_R * 2 ), 30, -1 /

 SHIP_ENGINE, BOX_SIZE_L * 3, BOX_SIZE_S, SHIP_X - BOX_SIZE_S, FLOOR_Y, 0, -1

objects = FLAG, 148, 96, SHIP_X - 2,
    FLOOR_Y - ( 96 + 10 + BOX_SIZE_S * 5 + BOX_SIZE_R * 2 + BOX_SIZE_L * 2 ),0 /
 SAILFRONT, 324, 376, SHIP_X + ( 20 + BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ),
    FLOOR_Y - ( 376 + 4 + BOX_SIZE_S * 4 ), 0 /
 SAILBACK, 390, 270, SHIP_X - 5 - BOX_SIZE_L,
    FLOOR_Y - ( 270 + 12 + BOX_SIZE_S * 4 + BOX_SIZE_R * 2 ), 0

targets = PIRATE, TARGET_SIZE, TARGET_SIZE, SHIP_X - 1 + ( BOX_SIZE_L +
    BOX_SIZE_R  + BOX_SIZE_S ), FLOOR_Y - ( TARGET_SIZE + BOX_SIZE_S * 4 ) /
 PIRATE, TARGET_SIZE, TARGET_SIZE, SHIP_X + 3 + ( BOX_SIZE_R * 2 ),
    FLOOR_Y - ( TARGET_SIZE + BOX_SIZE_S * 5 + BOX_SIZE_R ) /
 PIRATE, TARGET_SIZE, TARGET_SIZE, SHIP_X + ( BOX_SIZE_R * 2 + BOX_SIZE_L * 2 ),
    FLOOR_Y - ( TARGET_SIZE + BOX_SIZE_S * 5 + BOX_SIZE_R )
