# use '#' for comments
# use '/' to separate elements of lists
# use ',' to separate properties of elements
# use ' ' after '(' and before ')'

[Consts]
WIDTH = 1280
HEIGHT = 720
FLOOR_Y = 610

BOX_SIZE_S = 20
BOX_SIZE_R = 40
BOX_SIZE_L = 120
TARGET_SIZE = 60

STONE = stone
WOOD = wood

PIRATE = pirate
BOSS = boss

WIDTH_CASTLE = 1390 - 80
WIDTH_MCASTLE = 1514 - 60

[General]
level_num = 3
level_id = big_castle
cannon_pos_x = 40
cannon_pos_y = FLOOR_Y - 68
ammo = 7
bg = 1
time_attack = 0

[Elements]
blocks = WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_CASTLE - 1,
    FLOOR_Y - BOX_SIZE_L, 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_CASTLE + 79,
    FLOOR_Y - BOX_SIZE_L, 30, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, WIDTH_CASTLE - 10,
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_S ), 30, -1 /

 WOOD, BOX_SIZE_L, BOX_SIZE_S, WIDTH_CASTLE - 10,
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_CASTLE - 1,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_CASTLE + 79,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, WIDTH_CASTLE - 10,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 3 ), 20, -1 /

 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_CASTLE - 2,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 10, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_CASTLE + 29,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 5 ), 10, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_CASTLE + 59,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 10, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_CASTLE + 29,
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_S * 2 + BOX_SIZE_R ), 10, -1 /

#TOWER 2
 WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_MCASTLE + 286,
    FLOOR_Y - BOX_SIZE_L, 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_MCASTLE + 366,
    FLOOR_Y - BOX_SIZE_L, 30, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, WIDTH_MCASTLE + 277,
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_S ), 30, -1 /

 WOOD, BOX_SIZE_L, BOX_SIZE_S, WIDTH_MCASTLE + 277,
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_MCASTLE + 286,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_MCASTLE + 366,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 2 ), 20, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, WIDTH_MCASTLE + 277,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 3 ), 20, -1 /

 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 285,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 10, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 316,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 5 ), 10, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 346,
    FLOOR_Y - ( BOX_SIZE_L * 2 + BOX_SIZE_S * 4 ), 10, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 316,
    FLOOR_Y - BOX_SIZE_R, 10, -1 /

#MAIN_CASTLE
 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE - 23,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 23,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE,
    FLOOR_Y - ( BOX_SIZE_S + BOX_SIZE_R ), 25, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE,
    FLOOR_Y - ( BOX_SIZE_S * 2 + BOX_SIZE_R ), 25, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 77,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 123,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 100,
    FLOOR_Y - ( BOX_SIZE_S + BOX_SIZE_R ), 25, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 100,
    FLOOR_Y - ( BOX_SIZE_S * 2 + BOX_SIZE_R ), 25, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 177,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 223,
    FLOOR_Y - BOX_SIZE_R, 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 200,
    FLOOR_Y - ( BOX_SIZE_S + BOX_SIZE_R ), 25, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 200,
    FLOOR_Y - ( BOX_SIZE_S * 2 + BOX_SIZE_R ), 25, -1 /

 STONE, BOX_SIZE_L, BOX_SIZE_R, WIDTH_MCASTLE,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_S * 2 ), 30, -1 /
 STONE, BOX_SIZE_L, BOX_SIZE_R, WIDTH_MCASTLE + 120,
    FLOOR_Y - ( BOX_SIZE_R * 2 + BOX_SIZE_S * 2 ), 30, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 2,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 2 ), 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 48,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 2 ), 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 25,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 3 ), 25, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 25,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 4 ), 25, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 152,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 2 ), 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 198,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 2 ), 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 175,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 3 ), 25, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 175,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 4 ), 25, -1 /

 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 100,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S ), 30, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 100,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 2 ), 30, -1 /

 WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_MCASTLE + 45,
    FLOOR_Y - ( BOX_SIZE_R  * 3 + BOX_SIZE_S * 4 + BOX_SIZE_L ), 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_MCASTLE + 25,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 4 + BOX_SIZE_L ), 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_MCASTLE + 175,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 4 + BOX_SIZE_L ), 30, -1 /
 WOOD, BOX_SIZE_S, BOX_SIZE_L, WIDTH_MCASTLE + 195,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 4 + BOX_SIZE_L ), 30, -1 /

 WOOD, BOX_SIZE_L, BOX_SIZE_S, WIDTH_MCASTLE + 60,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 5 + BOX_SIZE_L ), 30, -1 /
 WOOD, BOX_SIZE_L, BOX_SIZE_S, WIDTH_MCASTLE + 60,
    FLOOR_Y - ( BOX_SIZE_R * 3 + BOX_SIZE_S * 6 + BOX_SIZE_L ), 30, -1 /

 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 21,
    FLOOR_Y - ( BOX_SIZE_R * 4 + BOX_SIZE_S * 4 + BOX_SIZE_L ), 30, -1 /
 STONE, BOX_SIZE_R, BOX_SIZE_R, WIDTH_MCASTLE + 180,
    FLOOR_Y - ( BOX_SIZE_R * 4 + BOX_SIZE_S * 4 + BOX_SIZE_L ), 30, -1 /

 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 69,
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_S * 7 + BOX_SIZE_R * 3 ), 10, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 100,
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_S * 8 + BOX_SIZE_R * 3 ), 10, -1 /
 WOOD, BOX_SIZE_R, BOX_SIZE_S, WIDTH_MCASTLE + 131,
    FLOOR_Y - ( BOX_SIZE_L + BOX_SIZE_S * 7 + BOX_SIZE_R * 3 ), 10, -1

targets = PIRATE, TARGET_SIZE, TARGET_SIZE, WIDTH_CASTLE + 20,
    FLOOR_Y - TARGET_SIZE /
 PIRATE, TARGET_SIZE, TARGET_SIZE, WIDTH_MCASTLE + 306,
    FLOOR_Y - ( TARGET_SIZE + BOX_SIZE_L + BOX_SIZE_S * 2 ) /
 BOSS, 110, 88, WIDTH_MCASTLE + 73,
    FLOOR_Y - ( 88 + BOX_SIZE_S * 2 + BOX_SIZE_R * 3 )
